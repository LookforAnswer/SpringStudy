<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 抽象bean：bean的 abstract 属性为true 的bean, 这样的bean 不能被IOC 容器实例化，只用来被继承配置 
		若某一个bean 的 class 属性没有制定，则该 bean 必须是一个抽象的bean
	-->
	<bean id="address" class="com.qxy.spring.beans.autowire.Address"
		p:city="BeiJing" p:street="WuDaoKou" ></bean>
		
	
	<!-- <bean id="address2" class="com.qxy.spring.beans.autowire.Address"
		p:city="BeiJing" p:street="DaZhongSi"></bean> -->
	
	<!-- bean配置的继承： 使用bean的 parent 属性制定继承那个bean的配置 -->
	<bean id="address2" p:city="BeiJing" p:street="DaZhongSi" parent="address"></bean>
	
	
	<bean id="car" class="com.qxy.spring.beans.autowire.Car"
		p:brand="Audi" p:price="300000"></bean>
	
	<!-- 要求再配置 Person 时，必须有一个关联的car！ 换句话说 person 这个bean 依赖 Car 这个 bean -->
	<bean id="person" class="com.qxy.spring.beans.autowire.Person"
		p:name="Tom" p:address-ref="address"  depends-on="car"></bean>
	
</beans>
