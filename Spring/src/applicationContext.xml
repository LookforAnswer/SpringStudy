<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 配置bean -->
	<bean id="helloWorld" class="com.qxy.spring.beans.HelloWorld">
		<property name="name" value="spring"></property>
	</bean>
	
	
	<!-- 通过构造器来依赖注入 -->
	<bean id="car" class="com.qxy.spring.beans.Car">
		<constructor-arg value="audi" index='0'></constructor-arg>
		<constructor-arg value="shanghai" index='1'></constructor-arg>
		<constructor-arg value="300000" type="double"></constructor-arg>
	</bean>
	
	
	<bean id="car2" class="com.qxy.spring.beans.Car">
		<constructor-arg value="audi" type="java.lang.String"></constructor-arg>
		<!-- 如果属性的值里边包含特殊的字符，如‘<’ -->
		<constructor-arg  type="java.lang.String">
			<value> <![CDATA[<shanghai>]]> </value>
		</constructor-arg>
		<constructor-arg value="240" type="int"></constructor-arg>
	</bean>
	
	<bean id="person" class="com.qxy.spring.beans.Person">
		<property name="name" value="tom" ></property>
		<property name="age" value="24" ></property>
		<!-- 通过ref 属性  来引用容器里边的其他的bean对象 -->
		<!-- <property name="car" ref="car2"></property> -->
		<!-- 通过ref 标签  来引用容器里边的其他的bean对象 -->
		<!-- <property name="car" >
			<ref bean="car2"/>
		</property> -->
		<!-- 通过内部bean来设置 ，但是内部bean不能被外部引用-->
		<property name="car" >
			<bean class="com.qxy.spring.beans.Car">
				<constructor-arg value="audi" index='0'></constructor-arg>
				<constructor-arg value="shanghai" index='1'></constructor-arg>
				<constructor-arg value="300000" type="double"></constructor-arg>
			</bean>
		</property>
	</bean>
	
	
	<bean id="person2" class="com.qxy.spring.beans.Person">
		<constructor-arg value="tom"></constructor-arg>
		<constructor-arg value="24"></constructor-arg>
		<!-- 配置文件中设置空值 用专用的标签  "<null/>" -->
		<!-- <constructor-arg ><null/></constructor-arg> -->
		<constructor-arg ref="car"></constructor-arg>
		<!-- 为级联属性赋值，注意，属性需要初始化，后才可以为级联属性赋值，否则异常-->
		<property name="car.speed" value="250"></property>
	</bean>
	
	
	<!-- 测试配置集合属性 -->
	<bean id="person3" class="com.qxy.spring.beans.collections.Person">
		<property name="name" value="tom"></property>
		<property name="age" value="24"></property>
		<property name="cars" >
			<!-- 通过属性中有list类型的，那么就用list标签来设置里边的值 -->
			<list>
				<ref bean="car"/>
				<ref bean="car2"/>
			</list>
		</property>
	</bean>
	
	
	<!-- 如何设置map类型属性 -->
	<bean id="newPerson" class="com.qxy.spring.beans.collections.NewPerson">
		<property name="name" value="tom"></property>
		<property name="age" value="24"></property>
		<property name="cars" >
			<map>
				<entry key="aa" value-ref="car"/>
				<entry key="bb" value-ref="car2"/>
			</map>
		</property>
	</bean>
	
	
	<!-- 配置properties属性值 -->
	<bean id="dataSource" class="com.qxy.spring.beans.collections.DataSource">
		<property name="properties">
			<props>
				<prop key="user">root</prop>
				<prop key="password">123456</prop>
				<prop key="jdbcUrl">jdbc:mysql:///test</prop>
				<prop key="driverClass">com.mysql.jdbc.Driver</prop>
			</props>
		</property>
	</bean>
	
	
	
	
</beans>
